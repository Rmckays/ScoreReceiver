{"version":3,"sources":["API/agent.js","D3/D3Chart.js","Components/ChartWrapper.jsx","Util/teamNames.js","Components/Modal.jsx","Components/Table.jsx","Stores/actionTypes.js","Components/Showcase.jsx","Components/Navigation.jsx","Components/Footer.jsx","Components/Greeting.jsx","Components/Backdrop.jsx","Containers/Pages/Home.jsx","Components/TeamSelect.jsx","Components/YearSelect.jsx","Components/SearchInput.jsx","Containers/Pages/SearchTeam.jsx","Components/AboutMessage.jsx","Containers/Pages/About.jsx","App.js","serviceWorker.js","Stores/AppState.js","Stores/Reducer.js","index.js"],"names":["axios","defaults","baseURL","responseBody","response","data","requests","url","get","then","getTeamHistory","team","year","getTeamSeason","season","getTeams","value","MARGINS","HEIGHT","WIDTH","D3Chart","element","currentTeam","svg","d3","append","attr","maxAway","d","parseInt","away_score","maxHome","home_score","absMax","y","domain","range","x","Date","date","xAxisCall","tickFormat","call","selectAll","yAxisCall","text","lineCurrentTeam","home_team","lineOpposeTeam","circles","teamPath","opposePath","exit","remove","enter","ChartWrapper","this","refs","chart","props","games","ref","Component","connect","state","getTeamName","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","classes","React","useState","open","setOpen","className","Button","variant","type","onClick","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","id","table","minWidth","teams","seasonOrHistory","history","dispatch","loadGames","val","useEffect","agent","Container","component","Paper","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","away_team","result","seasonVsHistory","showTable","childComp","root","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","content","flexGrow","contentShift","getIcon","index","Navigation","useTheme","page","setPage","navigateToPage","event","console","log","target","textContent","to","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","edge","Typography","noWrap","Drawer","anchor","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","getFullYear","Footer","Greeting","resetTable","wins","loadTeams","changeTeam","teamList","MenuItem","Select","labelId","onChange","yearList","changeYear","changeSeason","years","changeToHistory","checked","FormControlLabel","control","Switch","label","AboutMessage","App","exact","path","HomePage","SearchTeam","AboutPage","Boolean","window","location","hostname","match","initialState","reducer","action","toggled","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83568c13.chunk.js","sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4000/api';\n\nconst responseBody = response => response.data;\n\nconst requests = {\n    get: url => axios.get(url).then(responseBody)\n};\n\nconst getStats = {\n    getTeamHistory: (team, year) => requests.get(`/history/${team}/${year}`),\n    getTeamSeason: (team, season) => requests.get(`/season/${team}/${season}`)\n};\n\nconst teams = {\n    getTeams: value => requests.get(`/teams`)\n};\n\nexport default {\n    getStats,\n    teams\n}\n\n","import * as d3 from 'd3';\r\n\r\nconst MARGINS = {top: 10, right: 20, left: 35, bottom: 70};\r\nconst HEIGHT = 500 - MARGINS.left - MARGINS.right;\r\nconst WIDTH = 1000 - MARGINS.top - MARGINS.bottom;\r\n\r\nexport default class D3Chart {\r\n    constructor(element, data, currentTeam) {\r\n        const svg = d3.select(element)\r\n            .append(\"svg\")\r\n                .attr(\"width\", WIDTH + MARGINS.left + MARGINS.right)\r\n                .attr(\"height\", HEIGHT + MARGINS.top + MARGINS.bottom)\r\n            .append(\"g\")\r\n                .attr(\"transform\", `translate(${MARGINS.left}, ${MARGINS.top})`);\r\n\r\n        const maxAway = d3.max(data, d => {\r\n            return parseInt(d.away_score);\r\n        });\r\n\r\n        const maxHome = d3.max(data, d => {\r\n            return parseInt(d.home_score);\r\n        });\r\n\r\n        const absMax = (maxAway > maxHome) ?  maxAway : maxHome;\r\n\r\n        const y = d3.scaleLinear()\r\n            .domain([0, absMax])\r\n            .range([HEIGHT, 0]);\r\n\r\n        const x = d3.scaleTime()\r\n            .domain(d3.extent(data, d => new Date(d.date)))\r\n            .range([0, WIDTH]);\r\n\r\n        const xAxisCall = d3.axisBottom(x)\r\n            .tickFormat(d3.timeFormat(\"%b %d %y\"));\r\n\r\n        svg.append(\"g\")\r\n            .attr(\"transform\", `translate(0, ${HEIGHT})`)\r\n            .call(xAxisCall)\r\n            .selectAll(\"text\")\r\n            .attr(\"transform\", \"rotate(-45)\")\r\n            .attr(\"text-anchor\", \"end\");\r\n\r\n        const yAxisCall = d3.axisLeft(y);\r\n        svg.append(\"g\").call(yAxisCall);\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", WIDTH/2)\r\n            .attr(\"y\", HEIGHT + 60)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .text(\"Game Dates\");\r\n\r\n        svg.append(\"text\")\r\n            .attr(\"x\", - (HEIGHT / 2))\r\n            .attr(\"y\", - 25)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .text(\"Points\")\r\n            .attr(\"transform\", \"rotate(-90)\");\r\n\r\n        const lineCurrentTeam = d3.line()\r\n            .x(d => x(new Date(d.date)))\r\n            .y(d => {\r\n                if (d.home_team === currentTeam) {\r\n                    return y(d.home_score)\r\n                } else {\r\n                    return y(d.away_score)\r\n                }\r\n            });\r\n\r\n        const lineOpposeTeam = d3.line()\r\n            .x(d => x(new Date(d.date)))\r\n            .y(d => {\r\n                if (d.home_team !== currentTeam) {\r\n                    return y(d.home_score)\r\n                } else {\r\n                    return y(d.away_score)\r\n                }\r\n            });\r\n\r\n        const circles = svg.selectAll(\"circle\")\r\n            .data(data);\r\n\r\n        const teamPath = svg.append(\"path\");\r\n\r\n        const opposePath = svg.append(\"path\");\r\n\r\n        circles.exit().remove();\r\n\r\n        circles.enter().append(\"circle\")\r\n            .attr(\"r\", 4)\r\n            .attr(\"cx\", d => x(new Date(d.date)))\r\n            .attr(\"cy\", d => {\r\n                if(d.home_team === currentTeam){\r\n                    return y(d.home_score)\r\n                } else {\r\n                    return y(d.away_score)\r\n                }\r\n            })\r\n            .attr(\"fill\", \"green\");\r\n\r\n        teamPath.data([data])\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"green\")\r\n            .attr(\"stroke-width\", 2)\r\n            .attr('d', lineCurrentTeam);\r\n\r\n        circles.enter().append(\"circle\")\r\n            .attr(\"r\", 4)\r\n            .attr(\"cx\", d => x(new Date(d.date)))\r\n            .attr(\"cy\", d => {\r\n                if(d.home_team !== currentTeam){\r\n                    return y(d.home_score)\r\n                } else {\r\n                    return y(d.away_score)\r\n                }\r\n            })\r\n            .attr(\"fill\", \"red\");\r\n\r\n        opposePath.data([data])\r\n            .attr(\"fill\", \"none\")\r\n            .attr(\"stroke\", \"red\")\r\n            .attr(\"stroke-width\", 2)\r\n            .attr('d', lineOpposeTeam);\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport D3Chart from '../D3/D3Chart';\r\n\r\nclass ChartWrapper extends Component{\r\n\r\n    componentDidMount() {\r\n        new D3Chart(this.refs.chart, this.props.games, this.props.currentTeam)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div ref=\"chart\"></div>\r\n        );\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        games: state.games,\r\n        currentTeam: state.currentTeam\r\n    }\r\n\r\n};\r\n\r\nexport default connect(mapStateToProps)(ChartWrapper);","export const getTeamName = team => {\r\n    switch(team) {\r\n        case \"ARI\":\r\n            return \"Arizona Cardinals\";\r\n        case \"ATL\":\r\n            return \"Atlanta Falcons\";\r\n        case \"BAL\":\r\n            return \"Baltimore Ravens\";\r\n        case \"BUF\":\r\n            return \"Buffalo Bills\";\r\n        case \"CAR\":\r\n            return \"Carolina Panthers\";\r\n        case \"CHI\":\r\n            return \"Chicago Bears\";\r\n        case \"CIN\":\r\n            return \"Cincinnati Bengals\";\r\n        case \"CLE\":\r\n            return \"Cleveland Browns\";\r\n        case \"DAL\":\r\n            return \"Dallas Cowboys\";\r\n        case \"DEN\":\r\n            return \"Denver Broncos\";\r\n        case \"DET\":\r\n            return \"Detroit Lions\";\r\n        case \"GB\":\r\n            return \"Green Bay Packers\";\r\n        case \"HOU\":\r\n            return \"Houston Texans\";\r\n        case \"IND\":\r\n            return \"Indianapolis Colts\";\r\n        case \"JAX\":\r\n            return \"Jacksonville Jaguars\";\r\n        case \"KC\":\r\n            return \"Kansas City Chiefs\";\r\n        case \"LA\":\r\n            return \"St. Louis Rams\";\r\n        case \"LAC\":\r\n            return \"San Diego Chargers\";\r\n        case \"MIA\":\r\n            return \"Miami Dolphins\";\r\n        case \"MIN\":\r\n            return \"Minnesota Vikings\";\r\n        case \"NE\":\r\n            return \"New England Patriots\";\r\n        case \"NO\":\r\n            return \"New Orleans Saints\";\r\n        case \"NYG\":\r\n            return \"New York Giants\";\r\n        case \"NYJ\":\r\n            return \"New York Jets\";\r\n        case \"OAK\":\r\n            return \"Oakland Raiders\";\r\n        case \"PHI\":\r\n            return \"Philadelphia Eagles\";\r\n        case \"PIT\":\r\n            return \"Pittsburgh Steelers\";\r\n        case \"SEA\":\r\n            return \"Seattle Seahawks\";\r\n        case \"SF\":\r\n            return \"San Francisco 49ers\";\r\n        case \"TB\":\r\n            return \"Tampa Bay Buccaneers\";\r\n        case \"TEN\":\r\n            return \"Tennessee Titans\";\r\n        case \"WAS\":\r\n            return \"Washington Redskins\";\r\n        case \"WSH\":\r\n            return \"Washington Redskin\";\r\n        case \"LAR\":\r\n            return \"Los Angeles Rams\";\r\n    }\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {Button} from \"@material-ui/core\";\r\nimport ChartWrapper from \"./ChartWrapper\";\r\nimport {connect} from \"react-redux\";\r\nimport {getTeamName} from \"../Util/teamNames\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nconst ChartModal = props => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <Button variant='contained' className='no-underline color-main mt-2' type=\"button\" onClick={handleOpen}>\r\n        View Stats\r\n      </Button>\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <h2 id=\"transition-modal-title\">Team Stats</h2>\r\n            <div>\r\n                <div><div className=\"legend-box bg-green\"></div><div>{props.currentTeam} - {getTeamName(props.currentTeam)}</div></div>\r\n              <div><div className=\"legend-box bg-red\"></div><div>Opposition</div></div>\r\n            </div>\r\n            <ChartWrapper />\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentTeam: state.currentTeam,\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(ChartModal);","import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Container from '@material-ui/core/Container';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {connect} from \"react-redux\";\nimport agent from \"../API/agent\";\nimport * as dispatchState from '../Stores/actionTypes';\nimport ChartModal from \"./Modal\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nconst DenseTable = props => {\n  const classes = useStyles();\n\n  useEffect(() => {\n      if(props.seasonOrHistory) {\n          agent.getStats.getTeamHistory(props.currentTeam, props.year)\n                .then(response => {\n                    props.loadGames(response.games);\n                })\n      } else {\n          agent.getStats.getTeamSeason(props.currentTeam, props.season)\n              .then(response => {\n                  props.loadGames(response.games);\n              })\n      }\n  }, [props.currentTeam, props.season, props.year, props.seasonOrHistory]);\n\n  return (\n      <Container>\n          <Container component={Paper} className='mt-2 scrollY'>\n              <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                  <TableHead>\n                      <TableRow>\n                          <TableCell>Date</TableCell>\n                          <TableCell align=\"right\">Season</TableCell>\n                          <TableCell align=\"right\">Home Team</TableCell>\n                          <TableCell align=\"right\">Score</TableCell>\n                          <TableCell align=\"right\">Away Team</TableCell>\n                          <TableCell align=\"right\">Score</TableCell>\n                          <TableCell align=\"right\">Result</TableCell>\n                      </TableRow>\n                  </TableHead>\n                  <TableBody>\n                      {props.games.map(row => (\n                          <TableRow key={row[0]}>\n                              <TableCell component=\"th\" scope=\"row\">\n                                {row.date}\n                              </TableCell>\n                              <TableCell align=\"right\">{row.season}</TableCell>\n                              <TableCell align=\"right\">{row.home_team}</TableCell>\n                              <TableCell align=\"right\">{row.home_score}</TableCell>\n                              <TableCell align=\"right\">{row.away_team}</TableCell>\n                              <TableCell align=\"right\">{row.away_score}</TableCell>\n                              <TableCell align=\"right\">{row.result}</TableCell>\n                          </TableRow>\n                      ))}\n                  </TableBody>\n              </Table>\n          </Container>\n          <ChartModal />\n      </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n    return {\n        teams: state.teams,\n        currentTeam: state.currentTeam,\n        season: state.season,\n        seasonOrHistory: state.seasonOrHistory,\n        year: state.year,\n        history: state.history,\n        games: state.games\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n      loadGames: games => {\n          dispatch({type: dispatchState.loadGames, val: games})\n      }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DenseTable);","export const teamChange = 'TEAMCHANGE';\n\nexport const seasonChange = 'SEASONCHANGE';\n\nexport const historyChange = 'HISTORYCHANGE';\n\nexport const loadTeams = 'LOADTEAMS';\n\nexport const loadGames = \"LOADGAMES\";\n\nexport const toggleHistory = 'TOGGLEHISTORY';\n\nexport const searchTeam = 'SEARCHTEAM';\n\nexport const showTable = 'SHOWTABLE';\n\nexport const changeYear = \"CHANGEYEAR\";\n\nexport const changeSeason = \"CHANGESEASON\";\n\nexport const resetShowTable = \"RESETSHOWTABLE\";","import React from \"react\";\r\nimport style from './Components.modules.css';\r\nimport DenseTable from \"./Table\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Showcase = (props) => {\r\n    const showTable = (props.showTable) ? <DenseTable/> : null;\r\n\r\n    return (\r\n        <div className=\"showcase\">\r\n            <div className='d-flex justify-content-center align-items-center'>\r\n                <div className=\"showcaseChild\">\r\n                    {props.childComp}\r\n                </div>\r\n\r\n                {showTable}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        seasonVsHistory: state.seasonVsHistory,\r\n        showTable: state.showTable\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(Showcase);","import React, {useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport HistoryIcon from '@material-ui/icons/History';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nconst getIcon = (index) => {\r\n    switch(index){\r\n        case 0:\r\n            return <HomeIcon />;\r\n        case 1:\r\n            return <PeopleIcon />;\r\n        case 2:\r\n            return <InfoIcon />;\r\n    }\r\n};\r\n\r\nexport default function Navigation() {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [page, setPage] = useState(null);\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const navigateToPage = (event) => {\r\n        console.log('Hit Button');\r\n        console.log(event.target.textContent);\r\n        switch(event.target.textContent){\r\n            case 'Home':\r\n                setPage(<Redirect to='/' />);\r\n                break;\r\n            case 'Search Teams':\r\n                setPage(<Redirect to='/search' />);\r\n                break;\r\n            case 'About':\r\n                setPage(<Redirect to='/about' />);\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n                position=\"fixed\"\r\n                className={clsx(classes.appBar, {\r\n                    [classes.appBarShift]: open,\r\n                })}\r\n            >\r\n                <Toolbar>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        onClick={handleDrawerOpen}\r\n                        edge=\"start\"\r\n                        className={clsx(classes.menuButton, open && classes.hide)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" noWrap>\r\n                        ScoreReceiver\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"persistent\"\r\n                anchor=\"left\"\r\n                open={open}\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <div className={classes.drawerHeader}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {page}\r\n                <List>\r\n                    {['Home', 'Search Teams', 'About'].map((text, index) => (\r\n                        <ListItem button key={text}>\r\n                            <ListItemIcon>{getIcon(index)}</ListItemIcon>\r\n                            <ListItemText primary={text} onClick={navigateToPage}/>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n                <Divider />\r\n            </Drawer>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nconst date = new Date().getFullYear();\r\nconst Footer = () => {\r\n    return (\r\n        <div\r\n            id='footer'\r\n            className='d-flex justify-content-center align-items-center footer'>\r\n            <p>ScoreReceiver &copy; {date}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Greeting = () => {\r\n    return (\r\n        <div className='mt-1'>\r\n            <h1 className='header-1'>Welcome to Score Receiver</h1>\r\n            <p className='f-1'>The place to find all the game results for your favorite teams in the NFL.  <br/>Score Receiver has stats for the NFL from the last 40 years.</p>\r\n            <Button variant='contained'><NavLink className='no-underline color-main' to='/search'>Search Teams</NavLink></Button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Greeting;","import React from 'react'\r\n\r\nconst Backdrop = () => {\r\n    return (\r\n        <div className=\"backdrop\"/>\r\n    )\r\n};\r\n\r\nexport default Backdrop;","import React, {useEffect} from 'react';\nimport Showcase from \"../../Components/Showcase\";\nimport Navigation from \"../../Components/Navigation\";\nimport Footer from \"../../Components/Footer\";\nimport Greeting from \"../../Components/Greeting\";\nimport Backdrop from \"../../Components/Backdrop\";\nimport {connect} from \"react-redux\";\nimport * as dispatchState from \"../../Stores/actionTypes\";\n\nconst HomePage = props => {\n\n    useEffect(() => {\n        props.resetTable();\n    }, []);\n\n    return (\n        <>\n            <Backdrop />\n            <Showcase childComp={<Greeting/>}/>\n            <Navigation />\n            <Footer/>\n        </>\n    )\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        showTable: state.showTable\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        resetTable: () => {\n            dispatch({type: dispatchState.resetShowTable, val: false})\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","import React, {useEffect} from 'react';\r\nimport agent from \"../API/agent\";\r\nimport * as dispatchState from \"../Stores/actionTypes\";\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {getTeamName} from \"../Util/teamNames\";\r\n\r\n\r\nconst TeamSelect = props => {\r\n    useEffect(() => {\r\n        agent.teams.getTeams()\r\n            .then(response => {\r\n                props.loadTeams(response.teams);\r\n            })\r\n\r\n    }, []);\r\n\r\n    const handleChange = event => {\r\n        console.log(event.target.value);\r\n        props.changeTeam(event.target.value);\r\n    };\r\n\r\n    const teamList = props.teams.map(team => {\r\n        return(\r\n            <MenuItem value={team}>{team} - {getTeamName(team)}</MenuItem>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Select\r\n            className=\"bg-white w-1\"\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            onChange={handleChange}\r\n        >\r\n            {teamList}\r\n        </Select>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        teams: state.teams,\r\n        currentTeam: state.currentTeam,\r\n        wins: state.wins,\r\n        history: state.history,\r\n        seasonVsHistory: state.seasonOrHistory,\r\n        showTable: state.showTable\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadTeams: (teams) => {\r\n            dispatch({type:dispatchState.loadTeams, val: teams})\r\n        },\r\n        changeTeam: team => {\r\n            dispatch({type:dispatchState.teamChange, val: team})\r\n        },\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamSelect)","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport * as dispatchState from \"../Stores/actionTypes\";\r\n\r\nconst yearList = [\r\n    '1999', '2000', '2001', '2002', '2003', '2004', '2005', '2006', '2007', '2008', '2009', '2010', '2011',\r\n    '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'\r\n]\r\n\r\nconst YearSelect = props => {\r\n\r\n    const handleChange = event => {\r\n        if(props.seasonOrHistory){\r\n            props.changeYear(event.target.value)\r\n        }else {\r\n            props.changeSeason(event.target.value);\r\n        }\r\n    };\r\n\r\n    const years = yearList.map(year => {\r\n        return(\r\n            <MenuItem value={year}>{year}</MenuItem>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <Select\r\n            className=\"bg-white w-2 ml-1\"\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            onChange={handleChange}\r\n        >\r\n            {years}\r\n        </Select>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        year: state.year,\r\n        season: state.season,\r\n        seasonOrHistory: state.seasonOrHistory,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        changeYear: year => {\r\n            dispatch({type: dispatchState.changeYear, val: year})\r\n        },\r\n        changeSeason: year => {\r\n            dispatch({type: dispatchState.changeSeason, val: year})\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(YearSelect)","import React, {useEffect} from 'react';\nimport {connect} from \"react-redux\";\nimport * as dispatchState from \"../Stores/actionTypes\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport {Button} from \"@material-ui/core\";\nimport TeamSelect from \"./TeamSelect\";\nimport YearSelect from \"./YearSelect\";\n\nconst SearchInput = (props) => {\n\n    const handleChangeToHistory = event => {\n        props.changeToHistory(event);\n    };\n\n    const handleSearchTeam = () => {\n        props.showTable(true);\n    };\n\n    return (\n        <div className='searchInput mt-1 '>\n            <p className=\"f-1\">Please select a NFL Team to search.</p>\n            <div className=\"r-flex\">\n                <TeamSelect />\n                <YearSelect/>\n                <FormControlLabel\n                    control={\n                        <Switch\n                            className=\" ml-1\"\n                            checked={props.seasonVsHistory}\n                            onClick={handleChangeToHistory}\n                            // value=\"checkedB\"\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Historical\"\n                />\n                <Button onClick={handleSearchTeam} variant='contained' className='no-underline color-main'>Search</Button>\n            </div>\n        </div>\n    )\n\n};\n\nconst mapStateToProps = state => {\n    return {\n        teams: state.teams,\n        currentTeam: state.currentTeam,\n        wins: state.wins,\n        history: state.history,\n        seasonVsHistory: state.seasonOrHistory,\n        showTable: state.showTable\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeToHistory: event => {\n            console.log(event.target.checked);\n            dispatch({type: dispatchState.toggleHistory, val: event.target.checked})\n        },\n        showTable: value => {\n            dispatch({type: dispatchState.showTable, val: value});\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchInput);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Showcase from \"../../Components/Showcase\";\r\nimport Navigation from \"../../Components/Navigation\";\r\nimport Footer from \"../../Components/Footer\";\r\nimport SearchInput from \"../../Components/SearchInput\";\r\nimport Backdrop from \"../../Components/Backdrop\";\r\n\r\nconst SearchTeam = () => {\r\n\r\n    return (\r\n        <>\r\n            <Backdrop/>\r\n            <Showcase childComp={<SearchInput/>}/>\r\n            <Navigation />\r\n            <Footer/>\r\n        </>\r\n    )\r\n\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        teams: state.teams,\r\n        currentTeam: state.currentTeam,\r\n        wins: state.wins,\r\n        history: state.history\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SearchTeam);","import React from 'react';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst AboutMessage = () => {\r\n    return (\r\n        <div className='mt-1'>\r\n            <h1 className='header-1'>About Score Receiver</h1>\r\n            <p className='f-1'>Score Receiver was built using Python Flask and React with Redux.  <br/>All scores are grabbed from a csv file,<br/> formated in python\r\n                and then served via a REST api. <br/> All state is managed via Redux and all styling is handled with the Material-UI api. <br/> Additionally, all\r\n                charting is handled with D3.</p>\r\n            <Button variant='contained'><NavLink className='no-underline color-main' to='/'>Return Home</NavLink></Button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AboutMessage;","import React, {useEffect} from 'react';\r\nimport Showcase from \"../../Components/Showcase\";\r\nimport Navigation from \"../../Components/Navigation\";\r\nimport Footer from \"../../Components/Footer\";\r\nimport Backdrop from \"../../Components/Backdrop\";\r\nimport AboutMessage from \"../../Components/AboutMessage\";\r\nimport * as dispatchState from \"../../Stores/actionTypes\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst AboutPage = props => {\r\n\r\n    useEffect(() => {\r\n        props.resetTable();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Backdrop />\r\n            <Showcase childComp={<AboutMessage/>}/>\r\n            <Navigation />\r\n            <Footer/>\r\n        </>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        showTable: state.showTable\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        resetTable: () => {\r\n            dispatch({type: dispatchState.resetShowTable, val: false})\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutPage);","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport HomePage from \"./Containers/Pages/Home\";\nimport SearchTeam from \"./Containers/Pages/SearchTeam\";\nimport AboutPage from \"./Containers/Pages/About\";\n\nfunction App() {\n  return (\n      <BrowserRouter>\n           <div className=\"App\">\n                <Switch>\n                    <Route exact path='/' component={HomePage}/>\n                    <Route exact path='/search' component={SearchTeam} />\n                    <Route exact path='/about' component={AboutPage} />\n                </Switch>\n           </div>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    currentTeam: 'ARI',\n    games: [],\n    season: '2019',\n    year: '2013',\n    seasonOrHistory: false,\n    history: [],\n    teams: [],\n    showTable: false\n};\n\nexport default initialState;","import initialState from \"./AppState\";\nimport * as dispatchState from './actionTypes';\n\n\nconst reducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case dispatchState.loadTeams:\n\n            return {\n                ...state,\n                teams: action.val\n            };\n\n        case dispatchState.teamChange:\n            return {\n                ...state,\n                currentTeam: action.val\n            };\n\n        case dispatchState.loadGames:\n\n            return {\n                ...state,\n                games: action.val\n            }\n\n        case dispatchState.toggleHistory:\n            const toggled = action.val;\n\n            return {\n                ...state,\n                seasonOrHistory: toggled,\n                year: state.season\n            };\n\n        case dispatchState.showTable:\n            return{\n                ...state,\n                showTable: action.val\n            };\n\n        case dispatchState.changeSeason:\n            return {\n                ...state,\n                season: action.val\n            };\n\n        case dispatchState.changeYear:\n            return {\n                ...state,\n                year: action.val\n            };\n\n        case dispatchState.resetShowTable:\n            return {\n                ...state,\n                showTable: action.val\n            }\n    }\n    return state;\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport reducer from \"./Stores/Reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst store = createStore(reducer, composeEnhancers());\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}